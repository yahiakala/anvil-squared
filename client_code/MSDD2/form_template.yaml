components: []
container:
  properties:
    html: "<select class=\"select-picker\" \n        multiple \n        data-container=\"body\"\n        data-icon-base=\"fa\"\n        data-tick-icon=\"fa-check\"\n        data-show-subtext=\"true\"\n        data-selected-text-format=\"count\"\n></select>\n<script type=\"module\">\nimport {DesignerMultiSelectDropDown} from \"https://deno.land/x/anvil_extras@dev-2.1.1/js/designer_components/bundle.min.js\";\nDesignerMultiSelectDropDown.init();\n    \nfunction setSelectProperty(selector, propertyName, propertyValue) {\n  var element = document.querySelector(selector);\n  if (element) {\n    element.setAttribute(propertyName, propertyValue);\n  }\n}\n</script>\n"
  type: HtmlTemplate
custom_component: true
events:
- {default_event: true, name: change}
- {name: opened}
- {name: closed}
- {name: show}
- {name: hide}
is_package: true
properties:
- default_value: left
  group: text
  important: true
  name: align
  options: [left, center, right]
  type: enum
- default_value: []
  description: 'If set at runtime can use a list of tuples, (str, value) pairs. Or a list of dicts with keys: ''key'', ''value'', ''icon'', ''title'', ''enabled'''
  important: true
  name: items
  type: text[]
- {default_value: None Selected, important: false, name: placeholder, type: string}
- {default_value: false, group: interaction, important: false, name: enable_filtering, type: boolean}
- {default_value: true, group: interaction, important: true, name: multiple, type: boolean}
- {default_value: true, group: interaction, important: true, name: enabled, type: boolean}
- {default_value: false, group: interaction, important: false, name: enable_select_all, type: boolean}
- {default_value: true, group: appearance, important: true, name: visible, type: boolean}
- {default_value: '', description: use css lengths. \'auto\' sets the width as wide as the largest option, group: appearance, important: false, name: width, type: string}
- default_value: small
  group: layout
  important: false
  name: spacing_above
  options: [none, small, medium, large]
  type: enum
- default_value: small
  group: layout
  important: false
  name: spacing_below
  options: [none, small, medium, large]
  type: enum
- {group: user data, important: false, name: tag, type: object}
- allow_binding_writeback: true
  binding_writeback_events: [change]
  default_binding_prop: true
  important: true
  name: selected
  type: object
- {default_value: count, important: true, name: data_selected_text_format, type: string}
- {default_value: '', important: true, name: data_max_options, type: string}
